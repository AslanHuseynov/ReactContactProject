{"version":3,"sources":["Header.js","contact-list/contact-list-item/ContactListItem.js","contact-list/ContactList.js","ContactForm.js","data.js","AddContact.js","EditContact.js","search/Search.js","App.js","index.js"],"names":["Header","props","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","ContactListItem","contact","removeContact","handleShowEditForm","icon","faUser","name","faPhone","phone","faEnvelope","email","onClick","faTrashAlt","faPencilAlt","ContactList","this","contacts","map","key","handleRemoveContact","Component","ContactForm","htmlFor","aria-describedby","value","onChange","hanldeChange","class","for","getContacts","JSON","parse","localStorage","getItem","addContact","contactArray","setItem","stringify","newContactArray","filter","x","editContact","AddContact","state","Date","now","errors","event","target","setState","save","handleValidation","db","handleAddContact","close","alert","isFormValid","match","faCheck","faWindowClose","style","color","fontWeight","display","EditContact","handleEditContact","currentContact","currentId","Search","marginTop","showAddForm","placeholder","searchValue","handleSearch","App","isEnable","addForm","editForm","handleClick","contactData","toUpperCase","includes","handleAddFormClose","handleEditFormClose","newContacts","hendleShowAddForm","updatedContact","onSearch","e","console","log","data","prevProps","prevState","filterHandler","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2f259a5.chunk.js","sourcesContent":["import React from 'react'\n\nexport default  function Header (props){\n   return (\n        <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-primary\">\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav\">\n            </div>\n        </div>\n        </nav>\n   )\n}\n\n\n\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope, faPencilAlt, faPhone, faTrashAlt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\nimport './ContactListItem.css'\n\nfunction ContactListItem({contact,removeContact, handleShowEditForm}) {\n  return (\n    <div className='d-inline-block card mt-3 mr-3'>\n      <div className='card-body'>\n        <p><FontAwesomeIcon icon={faUser} /> {contact.name}</p>\n        <p><FontAwesomeIcon icon={faPhone} /> {contact.phone}</p>\n        <p><FontAwesomeIcon icon={faEnvelope} /> {contact.email}</p>\n\n        <button\n          className='btn btn-danger float-right ml-2 mb-2'\n          onClick={() => removeContact(contact.id)}\n        >\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </button>\n        <button\n          className='btn btn-warning float-right ml-2'\n          onClick={() => handleShowEditForm(contact.id)}\n        >\n          <FontAwesomeIcon icon={faPencilAlt} />\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default ContactListItem\n","import React, { Component } from 'react'\nimport ContactListItem from './contact-list-item/ContactListItem'\nimport './ContactList.css'\n\nclass ContactList extends Component {\n  render() {\n    return (\n      <div className='container'>\n        <h4>კონტაქტები</h4>\n        <hr />\n        <br />\n        <div>\n          {this.props.contacts &&\n            this.props.contacts.map((contact) => (\n              <ContactListItem\n                key={contact.id}\n                contact={contact}\n                handleShowEditForm = {this.props.handleShowEditForm}\n                removeContact={this.props.handleRemoveContact}\n              />\n            ))}\n        </div>\n      </div>\n    )\n  }\n}\nexport default ContactList\n","import React from 'react'\n\nexport default function ContactForm(props){\n    return(\n    <>\n    <div className='form-group'>\n        <label htmlFor='exampleInputEmail1'>დასახელება</label>\n        <input\n            type='text'\n            className='form-control'\n            id='exampleInputEmail1'\n            aria-describedby='emailHelp'\n            value={props.name}\n            name='name'\n            onChange={props.hanldeChange}\n        />\n    </div>\n    <div class='form-group'>\n    <label for='exampleInputPassword1'>ტელეფონი</label>\n    <input\n        type='text'\n        className='form-control'\n        id='exampleInputPassword1'\n        value={props.phone}\n        name='phone'\n        onChange={props.hanldeChange}\n    />\n    </div>\n    <div class='form-group'>\n    <label for='exampleInputPassword1'>ელ.ფოსტა</label>\n    <input\n        type='text'\n        className='form-control'\n        id='exampleInputPassword1'\n        value={props.email}\n        name='email'\n        onChange={props.hanldeChange}\n    />\n    </div>\n    </>\n    )\n}\n","\n// const contactData = [\n//     {\n//       id: 1,\n//       name: 'Zaza Beridze',\n//       phone: '111111111',\n//       email: 'zaza@gmail.com'\n//     },\n//     {\n//       id: 2,\n//       name: 'Eka maisuradze',\n//       phone: '222222222',\n//       email: 'eka@gmail.com'\n//     },\n//     {\n//       id: 3,\n//       name: 'Nino Baratashvili',\n//       phone: '333333333',\n//       email: 'nino@gmail.com'\n//     }\n//   ]\n\n  export function getContacts(){\n     const contacts = JSON.parse(localStorage.getItem('contacts')) || []\n     return contacts\n  }\n\n  export function getContact(id){\n    return getContacts.filter( x=> {\n      return x.id === id;\n    })\n  }\n\n  export function addContact(contact){\n      const contacts = getContacts()\n      const contactArray = [...contacts, contact]\n      localStorage.setItem('contacts', JSON.stringify(contactArray))\n  }\n  \n  export function removeContact(id){\n    const contacts = getContacts();\n    const newContactArray = contacts.filter(x => {\n      return x.id !== id;\n    });\n    localStorage.setItem('contacts', JSON.stringify(newContactArray))\n    return newContactArray;\n  }\n\n  export function editContact(contact){\n    const contacts = getContacts()\n    contacts.filter((x) => x.id === contact.id)[0].name = contact.name;\n    contacts.filter((x) => x.id === contact.id)[0].phone = contact.phone;\n    contacts.filter((x) => x.id === contact.id)[0].email = contact.email;\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }\n","import React, { Component } from 'react'\nimport ContactForm from './ContactForm'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faWindowClose } from '@fortawesome/free-solid-svg-icons'\nimport propTypes from 'prop-types'\nimport * as db from './data'\n\nclass AddContact extends Component {\n\n  static propTypes = {\n    handleAddContact : propTypes.func.isRequired,\n    hanldeChange : propTypes.func.isRequired\n  }\n\n  state = {\n    id: Date.now(),\n    name: '',\n    phone: '',\n    email: '',\n    errors: {\n      name:'',\n      phone: '',\n      email: ''\n    }\n  }\n\n  handleValidation(){\n    let isFormValid = true;\n    let errors = {};\n\n    //name\n    if(this.state.name === ''){\n      isFormValid = false;\n      errors.name = \"Name can't be empty\";\n    }\n\n    if(typeof this.state.name !== \"undefined\")\n    {\n      if(!this.state.name.match(/^[a-zA-Z]+$/)){\n        isFormValid = false;\n        errors.name = \"Name is not valid\";\n      }\n    }\n\n    //phone\n    if(this.state.phone === ''){\n      isFormValid = false;\n      errors.phone = \"Phone can't be empty\";\n    }\n\n    if(typeof this.state.phone !==  \"undefined\"){\n      if(!this.state.phone.match(/^\\+[0-9]{1,3}[0-9]{4,9}(?:x.+)?$/)){\n        isFormValid = false;\n        errors.phone = \"Phone is not valid\";\n      }\n    }\n\n    //email\n    if(this.state.email === ''){\n      isFormValid = false;\n      errors.email = \"E-Mail can't be empty\";\n    }\n\n    if(typeof this.state.email !== \"undefined\")\n    {\n      const rex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if(!this.state.email.match(rex)){\n        isFormValid = false;\n        errors.email = \"E-Mail is not valid\"\n      }\n    }\n\n    this.setState({errors: errors});\n    return isFormValid;\n  }\n\n\n  hanldeChange = (event) => {\n    const { name, value } = event.target\n    this.setState(\n      {\n        [name]: value,\n      },\n      () => {}\n    )\n  }\n\n  save = () => {\n    if(this.handleValidation()){\n      db.addContact(this.state)\n      this.props.handleAddContact(this.state)\n      this.props.close()\n    }\n    else\n    {\n      alert(\"Form has errors.\")\n    }\n  }\n\n  render() {\n    return (\n    <div className='container filter-form'>\n      <h4>კონტაქტის დამატება</h4>\n      <hr />\n      <br />\n          <form>\n          <ContactForm \n          hanldeChange = {this.hanldeChange}\n          />\n          <button\n            type='button'\n            id = 'submit'\n            value = 'Submit'\n            className='btn btn-success mr-1'\n            onClick={this.save}\n          >\n            <FontAwesomeIcon icon={faCheck} />\n          </button>\n          <button\n            type='button'\n            className='btn btn-secondary'\n            onClick={() => this.props.close()}\n          >\n            <FontAwesomeIcon icon = {faWindowClose} />\n          </button>\n          <div className = \"mt-3\">\n            <span style={{color : \"red\", fontWeight: \"bold\"}}>{this.state.errors.name}</span>\n            <span style={{color : \"red\", fontWeight: \"bold\",display: \"block\"}}>{this.state.errors.phone}</span>\n            <span style={{color : \"red\",fontWeight: \"bold\"}}>{this.state.errors.email}</span>\n          </div>\n          </form>\n      </div>\n    )\n  }\n}\n\n// AddContact.propTypes = {\n//   handleAddContact : propTypes.func.isRequired,\n//   hanldeChange : propTypes.func.isRequired\n// }\n\nexport default AddContact","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faWindowClose } from '@fortawesome/free-solid-svg-icons'\nimport ContactForm from './ContactForm'\nimport propTypes from 'prop-types'\nimport * as db from './data'\n\nclass EditContact extends Component {\n\n  static propTypes = {\n    hanldeChange: propTypes.func.isRequired,\n    handleEditContact: propTypes.func.isRequired\n  }\n\n  state={\n    id:null,\n    name: '',\n    phone: '',\n    email: '',\n    errors : {\n      name:'',\n      phone: '',\n      email: ''\n    }\n  }\n\n  componentDidMount(){\n    const data = db.getContacts()\n    const currentContact = data.filter((x) => x.id === this.props.currentId)\n    this.setState(\n        {\n            id: this.props.currentId,\n            name: currentContact[0].name,\n            phone: currentContact[0].phone,\n            email: currentContact[0].email,\n        }\n    )\n  }\n\n  handleValidation(){\n    let isFormValid = true;\n    let errors = {};\n\n    //name\n    if(this.state.name === ''){\n      isFormValid = false;\n      errors.name = \"Name can't be empty\";\n    }\n\n    if(typeof this.state.name !== \"undefined\")\n    {\n      if(!this.state.name.match(/^[a-zA-Z]+$/)){\n        isFormValid = false;\n        errors.name = \"Name is not valid\";\n      }\n    }\n\n    //phone\n    if(this.state.phone === ''){\n      isFormValid = false;\n      errors.phone = \"Phone can't be empty\";\n    }\n\n    if(typeof this.state.phone !==  \"undefined\"){\n      if(!this.state.phone.match(/^\\+[0-9]{1,3}[0-9]{4,9}(?:x.+)?$/)){\n        isFormValid = false;\n        errors.phone = \"Phone is not valid\";\n      }\n    }\n\n    //email\n    if(this.state.email === ''){\n      isFormValid = false;\n      errors.email = \"E-Mail can't be empty\";\n    }\n\n    if(typeof this.state.email !== \"undefined\")\n    {\n      const rex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if(!this.state.email.match(rex)){\n        isFormValid = false;\n        errors.email = \"E-Mail is not valid\"\n      }\n    }\n\n    this.setState({errors: errors});\n    return isFormValid;\n  }\n\n  hanldeChange = (event) => {\n    const { name, value } = event.target\n    this.setState(\n      {\n        [name]: value,\n      },\n      () => {}\n    )\n  }\n\n  save = () => {\n    if(this.handleValidation()){\n      db.editContact(this.state)\n      this.props.handleEditContact(this.state)\n      this.props.close()\n    }\n    else{\n      alert(\"Form has errors.\")\n    }\n  }\n\n  render() {\n    return (\n      <div className='container filter-form'>\n        <h4>კონტაქტის შეცვლა</h4>\n        <hr />\n        <br />\n          <form>\n          <ContactForm\n          hanldeChange = {this.hanldeChange}\n          name = {this.state.name}\n          phone = {this.state.phone}\n          email = {this.state.email}\n          />\n          <button\n            type='button'\n            id = 'submit'\n            value = 'Submit'\n            className='btn btn-warning mr-1'\n            onClick={this.save}\n          >\n            <FontAwesomeIcon icon={faCheck} />\n          </button>\n          <button\n            type='button'\n            className='btn btn-secondary'\n            onClick={() => this.props.close()}\n          >\n            <FontAwesomeIcon icon = {faWindowClose} />\n          </button>\n          <div className = \"mt-3\">\n            <span style={{color : \"red\", fontWeight: \"bold\"}}>{this.state.errors.name}</span>\n            <span style={{color : \"red\", fontWeight: \"bold\",display: \"block\"}}>{this.state.errors.phone}</span>\n            <span style={{color : \"red\",fontWeight: \"bold\"}}>{this.state.errors.email}</span>\n          </div>\n          </form>\n      </div>\n    )\n  }\n}\n\n// EditContact.propTypes = {\n//   hanldeChange: propTypes.func.isRequired,\n//   handleEditContact: propTypes.func.isRequired\n// }\n\nexport default EditContact\n","import React from 'react'\nimport './Search.css'\n\nfunction Search(props) {\n  return (\n    <form className='filter-form container' style={{ marginTop: '70px' }}>\n      <div className='input-group input-group'>\n        <div className='input-group-prepend'>\n          <button\n            className='btn btn-outline-secondary'\n            type='button'\n            id='add-button'\n            onClick={props.showAddForm}\n          >\n            დამატება\n          </button>\n        </div>\n        <input\n          placeholder='ძებნა'\n          type='text'\n          className='form-control'\n          id='search'\n          value={props.searchValue}\n          onChange={props.handleSearch}\n        />\n      </div>\n    </form>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport Header from './Header'\nimport ContactList from './contact-list/ContactList'\nimport AddContact from './AddContact'\nimport EditContact from './EditContact'\nimport Search from './search/Search'\nimport * as db from './data'\nimport './App.css'\n\nclass App extends React.Component {\n  state = {\n    contacts: null,\n    isEnable: true,\n    searchValue: '',\n    addForm: false,\n    editForm: false,\n    currentId : null,\n  }\n\n  componentDidMount() {\n    const data = db.getContacts()\n    this.setState({ contacts: data })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('componentDidUpdate', prevState, this.state)\n    if (prevState.searchValue !== this.state.searchValue) {\n      const data = db\n        .getContacts()\n        .filter((contact) =>\n         this.filterHandler(contact.name) || this.filterHandler(contact.phone) || this.filterHandler(contact.email)\n        )\n      this.setState({ contacts: data })\n    }\n  }\n\n  filterHandler(e){\n    return e.toUpperCase().includes(this.state.searchValue.toUpperCase());\n  }\n\n  handleClick = (id) => {\n    const contactData = this.state.contacts.filter((x) => x.id !== id)\n    this.setState({ contacts: contactData })\n  }\n\n  handleSearch = (event) => {\n    const contacts = contacts.filter((x) =>\n      x.name.toUpperCase().includes(event.target.value.toUpperCase())\n    )\n    this.setState({\n      searchValue: event.target.value,\n      contacts,\n    })\n  }\n\n  handleAddFormClose = () => {\n    this.setState({ addForm: false })\n  }\n\n  handleEditFormClose = () => {\n    this.setState({ editForm : false})\n  }\n\n  handleRemoveContact = (id) => {\n    // console.log('id',id);\n    const newContacts = db.removeContact(id)\n    this.setState({\n      contacts: [...newContacts]\n    });\n  }\n\n  hendleShowAddForm = () => {\n    this.setState({ addForm: true })\n  }\n\n  handleShowEditForm = (id) => {\n    this.setState({ editForm: true, currentId: id  })\n  }\n\n  handleAddContact = (contact) => {\n    this.setState({ contacts: [...this.state.contacts, contact] })\n  }\n\n  handleEditContact = (contact) => {\n    const updatedContact = this.state.contacts.filter((x) => x.id !== contact.id)\n    this.setState({contacts: [...updatedContact, contact]})\n  }\n\n  onSearch = (e) => {\n    console.log('searchValue', e)\n    this.setState({ searchValue: e.target.value })\n  }\n\n  render() {\n    if(this.state.addForm){\n      return(\n      <>\n      <Header />\n        <Search\n          searchValue={this.state.searchValue}\n          showAddForm={this.hendleShowAddForm}\n          handleSearch={this.onSearch}\n        />\n         <AddContact \n          close={this.handleAddFormClose} \n          handleAddContact = {this.handleAddContact}/>\n      </>\n      )\n    }\n    else if(this.state.editForm)\n    {\n      return(\n      <>\n      <Header />\n        <Search\n          searchValue={this.state.searchValue}\n          handleSearch={this.handleSearch}\n          showAddForm={this.hendleShowAddForm}\n        />\n        <EditContact\n         close={this.handleEditFormClose}\n         handleEditContact={this.handleEditContact}\n         currentId = {this.state.currentId}/>\n      </>\n      )\n    }\n    else{\n      return (\n      <>\n        <Header />\n        <Search\n          searchValue={this.state.searchValue}\n          showAddForm={this.hendleShowAddForm}\n          handleSearch={this.onSearch}\n        />\n        <ContactList\n            contacts={this.state.contacts}\n            handleRemoveContact={this.handleRemoveContact}\n            handleShowEditForm = {this.handleShowEditForm}\n        />\n      </>\n    )\n  }\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}